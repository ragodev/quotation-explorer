package getquote

import (
	"encoding/json"
	"math"
	"net/http"
	"strings"
)

func GetQuote() string {
	type QuotesSchollz []struct {
		ID   int    `json:"ID"`
		Text string `json:"Text"`
		Name string `json:"Name"`
	}
	// Generated by curl-to-Go: https://mholt.github.io/curl-to-go
	resp, err := http.Get("http://quotes.schollz.com/random/1.json")
	if err != nil {
		return ""
	}
	defer resp.Body.Close()
	decoder := json.NewDecoder(resp.Body)
	var quote QuotesSchollz
	err = decoder.Decode(&quote)
	if err != nil {
		return ""
	}
	s := quote[0].Text
	s = strings.Replace(s, "\n", " ", -1)

	// Format it so it fits in ~ < 80 characters
	addBreak := false
	sSlice := make([]string, len(s))
	for i := range s {
		if math.Mod(float64(i), 70) == 0 && i > 0 {
			addBreak = true
		}
		if addBreak && s[i] == ' ' {
			sSlice[i] = "\n"
			addBreak = !addBreak
		} else {
			sSlice[i] = string(s[i])
		}
	}

	// Return the quote
	if len(quote[0].Name) > 0 {
		return strings.Join(sSlice, "") + " - " + quote[0].Name
	} else {
		return strings.Join(sSlice, "")
	}
}
